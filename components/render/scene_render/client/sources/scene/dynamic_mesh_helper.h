#ifndef RENDER_SCENE_CLIENT_IMPL_SCENE_DYNAMIC_MESH_HELPER_SHARED_HEADER
#define RENDER_SCENE_CLIENT_IMPL_SCENE_DYNAMIC_MESH_HELPER_SHARED_HEADER

#include <media/geometry/mesh.h>

#include "visual_model.h"

namespace render
{

namespace scene
{

namespace client
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Dynamic mesh helper
///////////////////////////////////////////////////////////////////////////////////////////////////
class DynamicMeshHelper
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / Destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
    DynamicMeshHelper (const Node& node, const media::geometry::Mesh& mesh);
    ~DynamicMeshHelper ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Synchronize
///////////////////////////////////////////////////////////////////////////////////////////////////
    void UpdateCore (client::Context& context, const media::geometry::Mesh& mesh);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

}

#endif
