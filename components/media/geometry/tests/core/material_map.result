Results of material_map_test:
Material map id=1, source_id = 1, name='map1':
Set 'material1' 0
Set 'material2' 1
Set 'material4' 3
Find material id 'material2' = 1
map2 = map1
Material map id=1, source_id = 1, name='map2':
  0 ('material1')
  1 ('material2')
  2 ('material3')
  3 ('material4')
clear map2
Material map id=1, source_id = 1, name='map1':
Material map id=1, source_id = 1, name='map2':
Before remove
Set 'material1' 4
Set 'material2' 5
Set 'material4' 6
Set 'material5' 7
Set 'material6' 8
Set 'material7' 9
Material map id=1, source_id = 1, name='map1':
  6 ('material4')
  2 ('material3')
  5 ('material2')
  4 ('material1')
  7 ('material5')
  8 ('material6')
  9 ('material7')
  4294967229 ('big_index_material')
Big index material is 4294967229
After remove
Material map id=1, source_id = 1, name='map1':
  4 ('material1')
  7 ('material5')
  8 ('material6')
  9 ('material7')
  4294967229 ('big_index_material')
clone map1
Material map id=1, source_id = 1, name='map1':
  4 ('material1')
  7 ('material5')
  8 ('material6')
  9 ('material7')
  4294967229 ('big_index_material')
Material map id=3, source_id = 1, name='map2':
  4294967229 ('big_index_material')
  9 ('material7')
  8 ('material6')
  7 ('material5')
  4 ('material1')
source id is correct after clone
Clear map2
Material map id=1, source_id = 1, name='map1':
  4 ('material1')
  7 ('material5')
  8 ('material6')
  9 ('material7')
  4294967229 ('big_index_material')
Material map id=3, source_id = 1, name='map2':
map1 serialization size is 106
Bytes written during serialization = 106, data hash = fd3edc06
Bytes read during deserialization = 106
deserialized map:Material map id=4, source_id = 1, name='map3':
  4 ('material1')
  7 ('material5')
  8 ('material6')
  9 ('material7')
  4294967229 ('big_index_material')
Exception: Invalid argument <id>=4294967295. This id is reserved for internal use
    at media::geometry::MaterialMap::SetMaterial (uint32_t, const char*)
