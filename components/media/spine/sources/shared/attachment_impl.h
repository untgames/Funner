#ifndef MEDIALIB_SPINE_SHARED_ATTACHMENT_HEADER
#define MEDIALIB_SPINE_SHARED_ATTACHMENT_HEADER

#include <xtl/shared_ptr.h>

#include <media/spine/attachment.h>

#include <object.h>

namespace media
{

namespace spine
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Spine point attachment
///////////////////////////////////////////////////////////////////////////////////////////////////
class PointAttachmentDataImpl : virtual public IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Point attachment parameters
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual math::vec2f Position () = 0;
    virtual float       Rotation () = 0;
    virtual math::vec4f Color    () = 0;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Spine attachment
///////////////////////////////////////////////////////////////////////////////////////////////////
class AttachmentImpl : virtual public IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Name
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const char* Name () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Get Type and type-specific data.
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual AttachmentType Type () = 0;

            void*                                  TypeSpecificData ();
    virtual media::spine::PointAttachmentDataImpl* CreatePointAttachmentDataImpl () = 0;

  private:
    typedef xtl::shared_ptr<media::spine::PointAttachmentData> PointAttachmentDataPtr;

  private:
    PointAttachmentDataPtr point_attachment_data;
};

}

}

#endif
