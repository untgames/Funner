#ifndef MEDIALIB_SPINE_POINT_ATTACHMENT_HEADER
#define MEDIALIB_SPINE_POINT_ATTACHMENT_HEADER

#include <math/vector.h>

#include <media/spine/attachment.h>

namespace media
{

namespace spine
{

class IPointAttachment;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Spine point attachment
///////////////////////////////////////////////////////////////////////////////////////////////////
class PointAttachment
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructors / destructor / assignment
///////////////////////////////////////////////////////////////////////////////////////////////////
    PointAttachment  (const PointAttachment&);
    ~PointAttachment ();

    PointAttachment& operator = (const PointAttachment&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Point attachment parameters
///////////////////////////////////////////////////////////////////////////////////////////////////
    math::vec2f Position () const;
    float       Rotation () const;
    math::vec4f Color    () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Swap
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (PointAttachment&);

  protected:
    PointAttachment (IPointAttachment*);

  private:
    IPointAttachment* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Swap
///////////////////////////////////////////////////////////////////////////////////////////////////
void swap (PointAttachment&, PointAttachment&);

}

}

#endif
